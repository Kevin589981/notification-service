name: Notification Service

# 监听 repository_dispatch 事件
on:
  repository_dispatch:
    types: [send-notification]

jobs:
  send-notification:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Send notification
      env:
        # Bark 通知配置
        BARK_PUSH: ${{ secrets.BARK_PUSH }}
        BARK_ARCHIVE: ${{ secrets.BARK_ARCHIVE }}
        BARK_GROUP: ${{ secrets.BARK_GROUP }}
        BARK_SOUND: ${{ secrets.BARK_SOUND }}
        BARK_ICON: ${{ secrets.BARK_ICON }}
        
        # 钉钉通知配置
        DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
        DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
        
        # 飞书通知配置
        FSKEY: ${{ secrets.FSKEY }}
        
        # 企业微信通知配置
        QYWX_AM: ${{ secrets.QYWX_AM }}
        QYWX_KEY: ${{ secrets.QYWX_KEY }}
        
        # Telegram 通知配置
        TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
        TG_USER_ID: ${{ secrets.TG_USER_ID }}
        TG_API_HOST: ${{ secrets.TG_API_HOST }}
        TG_PROXY_AUTH: ${{ secrets.TG_PROXY_AUTH }}
        TG_PROXY_HOST: ${{ secrets.TG_PROXY_HOST }}
        TG_PROXY_PORT: ${{ secrets.TG_PROXY_PORT }}
        
        # Server酱通知配置
        PUSH_KEY: ${{ secrets.PUSH_KEY }}
        SCKEY: ${{ secrets.SCKEY }}
        
        # PushDeer 通知配置
        DEER_KEY: ${{ secrets.DEER_KEY }}
        DEER_URL: ${{ secrets.DEER_URL }}
        
        # Push+ 通知配置
        PUSH_PLUS_TOKEN: ${{ secrets.PUSH_PLUS_TOKEN }}
        PUSH_PLUS_USER: ${{ secrets.PUSH_PLUS_USER }}
        
        # Qmsg 通知配置
        QMSG_KEY: ${{ secrets.QMSG_KEY }}
        QMSG_TYPE: ${{ secrets.QMSG_TYPE }}
        
        # Gotify 通知配置
        GOTIFY_URL: ${{ secrets.GOTIFY_URL }}
        GOTIFY_TOKEN: ${{ secrets.GOTIFY_TOKEN }}
        GOTIFY_PRIORITY: ${{ secrets.GOTIFY_PRIORITY }}
        
        # iGot 通知配置
        IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}
        
        # SMTP 邮件通知配置
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_SSL: ${{ secrets.SMTP_SSL }}
        SMTP_EMAIL: ${{ secrets.SMTP_EMAIL }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        SMTP_NAME: ${{ secrets.SMTP_NAME }}
        
        # 其他配置
        HITOKOTO: ${{ secrets.HITOKOTO }}
        CONSOLE: ${{ secrets.CONSOLE }}
        SKIP_PUSH_TITLE: ${{ secrets.SKIP_PUSH_TITLE }}
        
        # GitHub Actions 事件相关环境变量
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        GITHUB_EVENT_PATH: ${{ github.event_path }}
        
      run: |
        echo "开始处理通知请求..."
        echo "事件类型: ${{ github.event.action }}"
        echo "事件数据: ${{ toJson(github.event.client_payload) }}"
        
        # 运行通知服务
        python main.py
        
    - name: Log notification result
      if: always()
      run: |
        echo "通知服务执行完成"
        echo "时间: $(date)"
        echo "事件来源: ${{ github.event.client_payload.source || 'unknown' }}"